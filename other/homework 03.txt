Готовим проект к работе

1. Важно соблюдать правила код-стайла и валидность вёрстки. Важно следовать прямо по пунктам задания, отображение вашей вёрстки может слегка отличаться.

2. Скачайте приложенные к домашнему заданию файлы (папку fonts, start.css, return.png) и вложите всё это в папку с готовой вёрсткой из модуля 2.

3. Создайте папку css, а в ней собственный файл style.css, перенесите туда код из start.css. Там уже написан некий код, сбрасывающий не нужные нам стили, подключаются шрифты (вам понадобится изменить путь до шрифтов, дописав туда ../ в начале пути, так как вы будете искать шрифты из папки css, а не из корня).

4. Подключите style.css к вашим двум HTML-файлам, а start.css удалите.

5. Оберните всё содержимое страницы index.html (вёрстку) в див с классом main-content.

6. Добавьте следующие стили для main-content и оберните ссылки («скачать» и «подробнее») в див, чтобы они остались в строку

    background-color: #222020;

    height: 100vh;

    display: flex;

    flex-direction: column;

    justify-content: center;

    align-items: center;

7. Для стилизации любых элементов (кроме оговоренных в описании отдельно) используйте классы. Классы обязательно должны быть названы осмысленно, чтобы сразу было понятно, что именно мы стилизуем.

Стилизуем текст

8. Для заголовка задайте: белый цвет, font-family: ‘Graphik LCG’, sans-serif и внешний отступ снизу, равный 30 пикселям.

9. Задайте ссылке «скачать»:
  внутренний отступ 20 пикселей,
  цвет — белый,
  цвет фона — #2f1ce4 (далее — цвет Skillbox), обводку толщиной 3 пикселя тоже цвета Skillbox, а так же строчно-блочность.

10. Задайте ссылке «подробнее»:
 внутренний отступ 20 пикселей,
 цвет — белый,
 цвет фона — прозрачный,
  обводку толщиной 3 пикселя белого цвета, и тоже строчно-блочность.

Выравниваем сайт по центру и добавляем красоты

11. В файле program.html — оберните всю вёрстку в див с классом container.

12. Задайте этому контейнеру: ширину 1170 пикселей, margin: 0 auto и внутренние отступы сверху и снизу по 30 пикселей.

13. Для ссылки «назад»:
сделать фоновую иконку «return.png»,
разместив её слева и по центру от текста (увидите на картинке)
с помощью паддинга и различных свойств background (background-position, background-size, background-repeat).

Познаём «силу» и выравниваем заголовки

14. Для главного заголовка данной страницы: отступ сверху 100 пикселей, внутренний отступ слева — 100 пикселей, размер шрифта — 48 пикселей и цвет: #222020.

15. Учимся основной «силе» классов — переиспользованию. На странице явно есть несколько одинаковых по стилю заголовков. Задайте им один класс и для него пропишите: внутренний отступ слева — 180 пикселей, размер шрифта — 36 пикселей, цвет — цвет Skillbox, отступ сверху — 100 пикселей, отступ снизу — 25 пикселей.

16. Для двух списков также стоит задать один класс. Стили: внутренний отступ слева — 200 пикселей, размер шрифта — 18 пикселей.

17. Кажется, вы уже поняли, что нужно сделать со всеми параграфами :) И их стили: внутренний отступ слева — 180 пикселей, отступ снизу 20 пикселей.

Последние штрихи

18. Для картинок, точнее их родителя, задайте: внутренний отступ слева — 200 пикселей, текст — по центру, строчно-блочность и отступы сверху и снизу по 50 пикселей.

19. Пришла пора отказаться от атрибута width у картинок. Используйте max-width в CSS со значением в 400 пикселей.

20. Важная задача — сделать таблицу валидной. Замените атрибут border на CSS-свойство border (при этом цвет бордера — #a0a0a0), cellspacing на border-collapse: collapse (для таблицы) и cellpadding на padding (для различного типа ячеек). Так же нужно задать для таблицы отступ сверху — 100 пикселей.

21. Готово! Сравните работу с приложенной картинкой. Не забудьте проверить, правильно ли вы следовали правилам кодстайла — https://www.codeguide.maxgraph.ru/.

Результат прислать преподавателю в виде архива с вёрсткой.




add


